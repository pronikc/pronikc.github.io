// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ DOM
const memeForm = document.getElementById('memeForm');
const memeGallery = document.getElementById('memeGallery');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
memeForm.addEventListener('submit', async (e) => {
    e.preventDefault(); // –û—Ç–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã

    const title = document.getElementById('memeTitle').value;
    const imageFile = document.getElementById('memeImage').files[0];

    const formData = new FormData();
    formData.append('title', title);
    formData.append('image', imageFile);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const response = await fetch('/upload', {
        method: 'POST',
        body: formData
    });

    if (response.ok) {
        loadMemes(); // –û–±–Ω–æ–≤–ª—è–µ–º –≥–∞–ª–µ—Ä–µ—é –º–µ–º–æ–≤
    } else {
        alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–º–∞');
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–º–æ–≤
async function loadMemes() {
    const response = await fetch('/memes');
    const memes = await response.json();
    memeGallery.innerHTML = '';

    memes.forEach(meme => {
        const memeDiv = document.createElement('div');
        memeDiv.classList.add('meme');
        memeDiv.innerHTML = `
            <img src="${meme.imageUrl}" alt="${meme.title}">
            <div class="vote">${meme.votes} üëç</div>
        `;
        memeGallery.appendChild(memeDiv);
    });
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
loadMemes();